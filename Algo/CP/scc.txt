#include <bits/stdc++.h>
using namespace std;


#define TASK "TASK"
#define X first
#define Y second
const int N = 1e4 + 5;
typedef pair <int, int> ii;
int n, m, low[N], num[N], time_DFS, scc;
vector <int> adj[N];
bool del[N];
stack <int> s;

void DFS(int u){
    low[u] = num[u] = ++time_DFS;
    s.push(u);
    for (auto v : adj[u]){
        if (del[v]) continue;
        if (!num[v]){
            DFS(v);
            low[u] = min(low[u], low[v]);
        } else low[u] = min(low[u], num[v]);
    }
    if (low[u] == num[u]){
        ++scc;
        int v;
        while (v != u){
            v = s.top();
            s.pop();
            del[v] = true;
        }
    }
}
void Solve(){
    cin >> n >> m;
    while (m --> 0){
        int u, v;
        cin >> u >> v;
        adj[u].push_back(v);
    }
    for (int i = 1; i <= n; ++i)
        if (!num[i]) DFS(i);
    cout << scc << '\n';
}
int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    #ifndef ONLINE_JUDGE
        freopen(TASK".INP","r",stdin);
        freopen(TASK".OUT","w",stdout);
    #endif
    int ntests = 1;
//    cin >> ntests;
    while (ntests--) Solve();
    return 0;
}